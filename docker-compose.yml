services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 30s
      retries: 3
  db-init:
    image: mysql:8.0
    volumes:
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mynetwork
    entrypoint: [ "/bin/sh", "/docker-entrypoint-initdb.d/init-db.sh" ]
    environment:
      MYSQL_ROOT_PASSWORD: root
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/transaction?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8080:8080"
    networks:
      - mynetwork
    entrypoint: ["java", "-jar", "app.jar"]
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql-data: